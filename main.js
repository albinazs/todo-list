(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat&display=swap);"]),a.push([n.id,':root {\n  --light-grey-color: #fafafa;\n  --dark-grey-color: rgb(181, 185, 181);\n  --orange-color: #ff9000;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projects-div {\n  margin: 10px 0px;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: var(--dark-grey-color);\n}\n\naside form input[type="text"] {\n  width: 100%;\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.orange {\n  color: orange;\n}\n\naside li.add:hover {\n  background-color: var(--light-grey-color);\n  color: var(--orange-color);\n}\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n\n.check {\n  text-decoration: line-through;\n}\n\n.main li.add:hover {\n  background-color: #ffffff;\n  color: var(--orange-color);\n}\n\n.main form {\n  width: 100%;\n}\n\n.main form #input {\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.main form input[type="text"] {\n  width: 100%;\n  border: none;\n  padding: 10px 0px;\n}\n\n.main form input[type="date"],\n.main form input[type="select"] {\n  border: 1px solid var(--dark-grey-color);\n}\n\ninput:focus {\n  outline: none;\n}\n\n.main form .input-buttons,\naside form .input-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n.main form button,\naside form button {\n  text-align: center;\n  width: auto;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n}\n\n.main form button:first-of-type,\naside form button:first-of-type {\n  color: white;\n  background-color: var(--orange-color);\n}\n\n.main form button:last-of-type,\naside form button:last-of-type {\n  background-color: var(--light-grey-color);\n}\n\n@media (max-width: 960px) .toggle-sidebar {\n  display: inline-block !important;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,2BAA2B;EAC3B,qCAAqC;EACrC,uBAAuB;AACzB;;AAEA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,qCAAqC;EACrC,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,gCAAgC;EAChC,4BAA4B;AAC9B;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,YAAY;EACZ,aAAa;EACb,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,wCAAwC;EACxC,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yCAAyC;EACzC,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,yBAAyB;EACzB,0BAA0B;AAC5B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,wCAAwC;EACxC,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;AACnB;;AAEA;;EAEE,wCAAwC;AAC1C;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,aAAa;EACb,SAAS;AACX;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;;EAEE,YAAY;EACZ,qCAAqC;AACvC;;AAEA;;EAEE,yCAAyC;AAC3C;;AAEA;EACE,gCAAgC;AAClC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat&display=swap");\n\n:root {\n  --light-grey-color: #fafafa;\n  --dark-grey-color: rgb(181, 185, 181);\n  --orange-color: #ff9000;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projects-div {\n  margin: 10px 0px;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: var(--dark-grey-color);\n}\n\naside form input[type="text"] {\n  width: 100%;\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.orange {\n  color: orange;\n}\n\naside li.add:hover {\n  background-color: var(--light-grey-color);\n  color: var(--orange-color);\n}\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n\n.check {\n  text-decoration: line-through;\n}\n\n.main li.add:hover {\n  background-color: #ffffff;\n  color: var(--orange-color);\n}\n\n.main form {\n  width: 100%;\n}\n\n.main form #input {\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.main form input[type="text"] {\n  width: 100%;\n  border: none;\n  padding: 10px 0px;\n}\n\n.main form input[type="date"],\n.main form input[type="select"] {\n  border: 1px solid var(--dark-grey-color);\n}\n\ninput:focus {\n  outline: none;\n}\n\n.main form .input-buttons,\naside form .input-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n.main form button,\naside form button {\n  text-align: center;\n  width: auto;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n}\n\n.main form button:first-of-type,\naside form button:first-of-type {\n  color: white;\n  background-color: var(--orange-color);\n}\n\n.main form button:last-of-type,\naside form button:last-of-type {\n  background-color: var(--light-grey-color);\n}\n\n@media (max-width: 960px) .toggle-sidebar {\n  display: inline-block !important;\n}\n'],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],c=0;c<n.length;c++){var d=n[c],A=o.base?d[0]+o.base:d[0],s=i[A]||0,l="".concat(A," ").concat(s);i[A]=s+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var d=o(n,r),A=0;A<i.length;A++){var s=t(i[A]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{IK:()=>O,PK:()=>N,mK:()=>Y});var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),c=t.n(a),d=t(565),A=t.n(d),s=t(216),l=t.n(s),p=t(589),u=t.n(p),f=t(426),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=c().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;class E{static saveTodoApp(){localStorage.setItem("todoApp",JSON.stringify(Y))}static getTodoApp(){const n=Object.assign(Object.create(Y),JSON.parse(localStorage.getItem("todoApp")));return n.setProjects(n.getProjects().map((n=>Object.assign(new O,n)))),n.getProjects().forEach((n=>n.setTodos(n.getTodos().map((n=>Object.assign(new N,n)))))),n}static addProject(n){Y.addProject(n),E.saveTodoApp()}static removeProject(n){Y.removeProject(n),E.saveTodoApp()}static addTodo(n,e){Y.projects[n].addTodo(e),E.saveTodoApp()}static removeTodo(n,e){Y.projects[n].removeTodo(e),E.saveTodoApp()}static editTodo(n,e,t,o){Y.projects[n].todoList[e].editTodo(t,o),E.saveTodoApp()}}const g=document.querySelector(".todos"),C=document.querySelector(".projectlist"),h=document.querySelector("#inbox"),y=document.querySelector("#complete"),b=document.querySelector("#add-button-template"),v=document.querySelector("#project-template"),B=document.querySelector("#todo-template"),x=document.querySelector("#add-project-template"),k=document.querySelector("#add-todo-template"),j=(n,e,t)=>{const o=document.importNode(B.content,!0),r=o.querySelector("li"),i=o.querySelector("input"),a=o.querySelector("p:first-of-type"),c=o.querySelector("p:last-of-type"),d=o.querySelector("button:first-of-type"),A=o.querySelector("button:last-of-type");a.textContent="".concat(n.description),c.textContent="".concat(n.dueDate),d.dataset.todoIndex="".concat(e),A.dataset.todoIndex="".concat(e),!0===n.isComplete&&(i.checked=!0,a.classList.add("check"),c.classList.add("check")),i.addEventListener("change",(()=>{i.checked?(a.classList.add("check"),c.classList.add("check"),n.isComplete=!0):(a.classList.remove("check"),c.classList.remove("check"),n.isComplete=!1)})),d.dataset.projectIndex=t,d.addEventListener("click",(n=>{n.stopPropagation(),q(t,e)})),A.dataset.projectIndex=t,A.addEventListener("click",(n=>{n.stopPropagation(),S(t,e)})),g.appendChild(r)},S=(n,e)=>{E.removeTodo(n,e),T(),W()},w=n=>{const e=document.importNode(b.content,!0),t=e.querySelector("li");e.querySelector("p").textContent="Add task",t.addEventListener("click",(()=>q(n))),g.appendChild(t)},q=(n,e)=>{g.removeChild(g.lastChild);const t=document.importNode(k.content,!0),o=t.querySelector("form"),r=t.querySelector("input[type=text]"),i=t.querySelector("input[type=date]"),a=t.querySelector("select"),c=t.querySelector("button[type=submit]");if(t.querySelector("button[type=reset]").addEventListener("click",(()=>{g.removeChild(g.lastChild),w(n)})),e||0===e){const t=Y.projects[n].todoList[e];return r.value=t.description,i.value=t.dueDate,o.addEventListener("submit",(t=>{t.preventDefault(),E.editTodo(n,e,r.value,i.value),z(n)})),a.style.display="none",c.textContent="Edit",void g.appendChild(o)}null===n?(Y.projects.forEach((n=>{const e=document.createElement("option");e.textContent="".concat(n.description),e.value="".concat(n.description),a.appendChild(e)})),o.addEventListener("submit",(e=>{e.preventDefault(),n=Y.projects.findIndex((n=>n.description==="".concat(a.value)));const t=new N(r.value,i.value);E.addTodo(n,t),z(n)})),g.appendChild(o)):(o.addEventListener("submit",(e=>{e.preventDefault();const t=new N(r.value,i.value);E.addTodo(n,t),z(n)})),a.style.display="none",g.appendChild(o))},T=()=>{g.innerHTML=""},L=()=>{E.getTodoApp().getProjects().forEach(((n,e)=>{const t=document.importNode(v.content,!0),o=t.querySelector("li"),r=t.querySelector("p"),i=t.querySelector("button");i.dataset.projectIndex=e,r.textContent="".concat(n.description),o.addEventListener("click",(()=>{z(e)})),i.addEventListener("click",(n=>{I(n)})),C.appendChild(o),console.log(e)})),P()},P=()=>{const n=document.importNode(b.content,!0),e=n.querySelector("li");n.querySelector("p").textContent="Add project",e.addEventListener("click",(()=>(()=>{C.removeChild(C.lastChild);const n=document.importNode(x.content,!0),e=n.querySelector("form"),t=n.querySelector("input"),o=n.querySelector('button[type="reset"]');C.appendChild(e),e.addEventListener("submit",(n=>{n.preventDefault();const e=new O(t.value);E.addProject(e),M(),L()})),o.addEventListener("click",(()=>{C.removeChild(C.lastChild),P()}))})())),C.appendChild(e)},z=n=>{T(),E.getTodoApp().getProjects()[n].getTodos().forEach(((e,t)=>{j(e,t,n)})),w(n)},I=n=>{n.stopPropagation();const e=n.target.dataset.projectIndex;E.removeProject(e),M(),L(),T(),W()},M=()=>{C.innerHTML=""},W=()=>{Y.projects.forEach(((n,e)=>{n.todoList.forEach(((n,t)=>{j(n,t,e)}))})),w(null)};h.addEventListener("click",(()=>{T(),W()})),y.addEventListener("click",(()=>{T(),(()=>{if(Y.projects.forEach(((n,e)=>{n.todoList.filter((n=>!0===n.isComplete)).forEach(((n,t)=>{j(n,t,e);const o=g.querySelectorAll("input[type=checkbox]"),r=g.querySelectorAll("button:first-of-type");o.forEach((n=>n.style.display="none")),r.forEach((n=>n.style.display="none"))}))})),g.firstChild){const n=document.createElement("button");n.textContent="Delete all",n.addEventListener("click",(()=>{})),g.appendChild(n)}})()}));class N{constructor(n,e){this.description=n,this.dueDate=e,this.isComplete=!1}editTodo(n,e){this.description=n,this.dueDate=e}completeTodo(){this.isComplete=!1}}class O{constructor(n){this.description=n,this.todoList=[]}editProject(n){this.description=n}setTodos(n){this.todoList=n}getTodos(){return this.todoList}addTodo(n){this.todoList.push(n)}removeTodo(n){this.todoList.splice(n,1)}}let Y={projects:[],setProjects(n){this.projects=n},getProjects(){return this.projects},addProject(n){this.projects.push(n)},removeProject(n){this.projects.splice(n,1)}};Y=E.getTodoApp()||Object.create(Y);const D=E.getTodoApp();console.log(D),console.log(Y),W(),L()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,