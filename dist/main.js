(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat&display=swap);"]),a.push([n.id,'* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\n.projects {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.projects button {\n  font-size: 2rem;\n  width: auto;\n}\n\n.projects button:hover {\n  color: #ff9000;\n  background-color: inherit;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: rgb(181, 185, 181);\n}\n\n/*\nto fix bold font\nto ADD transition!\n*/\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,qCAAqC;EACrC,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,gCAAgC;EAChC,4BAA4B;AAC9B;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,YAAY;EACZ,aAAa;EACb,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,WAAW;AACb;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;;;CAGC;;AAED;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat&display=swap");\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\n.projects {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.projects button {\n  font-size: 2rem;\n  width: auto;\n}\n\n.projects button:hover {\n  color: #ff9000;\n  background-color: inherit;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: rgb(181, 185, 181);\n}\n\n/*\nto fix bold font\nto ADD transition!\n*/\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n'],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);o&&a[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},a=[],s=0;s<n.length;s++){var l=n[s],c=o.base?l[0]+o.base:l[0],A=r[c]||0,d="".concat(c," ").concat(A);r[c]=A+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=i(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var l=o(n,i),c=0;c<r.length;c++){var A=t(r[c]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=l}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{PK:()=>T,mK:()=>z});var n=t(379),e=t.n(n),i=t(795),r=t.n(i),a=t(569),s=t.n(a),l=t(565),c=t.n(l),A=t(216),d=t.n(A),p=t(589),u=t.n(p),f=t(426),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const h=document.querySelector(".todos"),C=document.querySelector(".projectlist"),E=(n,e,t,o,i)=>{const r=document.createElement(n);return e&&r.classList.add(e),t&&(r.textContent=t),o&&r.setAttribute("type",o),i&&(r.dataset.index=i),r},g=(n,e)=>{const t=E("li",null,null),o=E("input",null,null,"checkbox"),i=E("p",null,"".concat(n.description)),r=E("p",null,"".concat(n.dueDate)),a=E("button","material-symbols-outlined","edit"),s=E("button","material-symbols-outlined","delete",null,"".concat(e));s.addEventListener("click",(n=>{n.stopPropagation()})),t.appendChild(o),t.appendChild(i),t.appendChild(r),t.appendChild(a),t.appendChild(s),h.appendChild(t)},b=n=>{const e=E("button","addtodo","+Add task",null,"".concat(n));e.addEventListener("click",(n=>B(n))),h.appendChild(e)},B=n=>{h.removeChild(h.lastChild);const e=E("form",null,null),t=E("input",null,null,"text"),o=E("input",null,null,"text"),i=E("select",null,null),r=E("button",null,"Add","submit");if(t.required=!0,t.setAttribute("placeholder","Task description"),i.setAttribute("name","projects"),console.log(n.target.dataset.index),"null"==n.target.dataset.index)z.projects.forEach((n=>{const e=E("option",null,"".concat(n.description));e.setAttribute("value","".concat(n.description)),i.appendChild(e)})),console.log("YYYEP"),e.addEventListener("submit",(n=>{n.preventDefault(),console.log(z),console.log(i.value);const e=z.projects.findIndex((n=>n.description==="".concat(i.value)));console.log(e);const r=new T(t.value,o.value);z.projects[e].addTodo(r),console.log(z),x(e)})),e.appendChild(t),e.appendChild(o),e.appendChild(i),e.appendChild(r),h.appendChild(e);else{const i=n.target.dataset.index;e.addEventListener("submit",(n=>{n.preventDefault();const e=new T(t.value,o.value);z.projects[i].addTodo(e),console.log(z),x(i)})),e.appendChild(t),e.appendChild(o),e.appendChild(r),h.appendChild(e)}},y=()=>{h.innerHTML=""},v=()=>{z.projects.forEach(((n,e)=>{const t=E("li",null,null),o=E("span","material-symbols-outlined","list"),i=E("p",null,"".concat(n.description)),r=E("button","material-symbols-outlined","delete",null,"".concat(e));t.appendChild(o),t.appendChild(i),t.appendChild(r),t.addEventListener("click",(()=>{x(e)})),r.addEventListener("click",(n=>{j(n),y(),w()})),C.appendChild(t)}))},x=n=>{y(),z.projects[n].todoList.forEach(((n,e)=>{g(n,e)})),b(n)},j=n=>{n.stopPropagation(),console.log("yes");const e=n.target.dataset.index;z.removeProject(e),k(),v(),console.log(z)},k=()=>{C.innerHTML=""},w=()=>{z.projects.forEach((n=>{n.todoList.forEach(((n,e)=>{g(n,e)}))})),b(null)};document.querySelector("#inbox").addEventListener("click",(()=>{y(),w()}));class T{constructor(n,e,t){this.description=n,this.dueDate=e,this.project=t,this.isComplete=!1}editTodo(n,e){this.description=n,this.dueDate=e}completeTodo(){this.isComplete=!0}}class L{constructor(n){this.description=n,this.todoList=[]}editProject(n){this.description=n}addTodo(n){this.todoList.push(n)}removeTodo(n){this.todoList.splice(n,1)}}const z={projects:[],addProject(n){this.projects.push(n)},removeProject(n){console.log(n),this.projects.splice(n,1)}},M=new L("demo"),P=new L("demo2"),S=new T("to clean room","2pm","demo"),D=new T("to run","5.09");M.addTodo(S),P.addTodo(S),P.addTodo(D),z.addProject(M),z.addProject(P),w(),v()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBRURDLGVBQ0VqTCxLQUFLNkssWUFBYSxDQUNuQixFQUtJLE1BQU1LLEVBQ1hOLFlBQVl6QyxHQUNWbkksS0FBS21JLFlBQWNBLEVBQ25CbkksS0FBS3lLLFNBQVcsRUFDakIsQ0FFRFUsWUFBWUosR0FDVi9LLEtBQUttSSxZQUFjNEMsQ0FDcEIsQ0FFRHBDLFFBQVFtQixHQUNOOUosS0FBS3lLLFNBQVNoTCxLQUFLcUssRUFDcEIsQ0FFRHNCLFdBQVczSCxHQUNUekQsS0FBS3lLLFNBQVN4SCxPQUFPUSxFQUFPLEVBQzdCLEVBR0ksTUFBTTZGLEVBQVUsQ0FDckJsQyxTQUFVLEdBRVZpRSxXQUFXN0IsR0FDVHhKLEtBQUtvSCxTQUFTM0gsS0FBSytKLEVBQ3BCLEVBRURlLGNBQWM5RyxHQUNaMkYsUUFBUUMsSUFBSTVGLEdBQ1p6RCxLQUFLb0gsU0FBU25FLE9BQU9RLEVBQU8sRUFDN0IsR0FLRzZILEVBQWMsSUFBSUosRUFBUSxRQUMxQkssRUFBZSxJQUFJTCxFQUFRLFNBRTNCTSxFQUFVLElBQUl6QixFQUFTLGdCQUFpQixNQUFPLFFBQy9DMEIsRUFBUSxJQUFJMUIsRUFBUyxTQUFVLFFBRXJDdUIsRUFBWTNDLFFBQVE2QyxHQUNwQkQsRUFBYTVDLFFBQVE2QyxHQUNyQkQsRUFBYTVDLFFBQVE4QyxHQUVyQm5DLEVBQVErQixXQUFXQyxHQUNuQmhDLEVBQVErQixXQUFXRSxHQUVuQmYsSUFDQUwsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvRE9NLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiTW9udHNlcnJhdFxcXCIsIHNhbnMtc2VyaWY7XFxuICBmb250LXNpemU6IDE4cHg7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxufVxcblxcbmxpIHtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG59XFxuXFxuYm9keSB7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMwMHB4IDFmcjtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNXJlbSAxZnI7XFxufVxcblxcbmhlYWRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY5MDAwO1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIGdyaWQtY29sdW1uOiBzcGFuIDI7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuYXNpZGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcXG4gIHBhZGRpbmc6IDJyZW07XFxufVxcblxcbmFzaWRlIGxpIHNwYW4ge1xcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG5idXR0b24ge1xcbiAgYmFja2dyb3VuZDogbm9uZTtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbiAgYm9yZGVyOiBub25lO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGZvbnQ6IGluaGVyaXQ7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBvdXRsaW5lOiBpbmhlcml0O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXFxuYXNpZGUgYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGVkZWQ7XFxufVxcblxcbi5wcm9qZWN0cyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLnByb2plY3RzIGJ1dHRvbiB7XFxuICBmb250LXNpemU6IDJyZW07XFxuICB3aWR0aDogYXV0bztcXG59XFxuXFxuLnByb2plY3RzIGJ1dHRvbjpob3ZlciB7XFxuICBjb2xvcjogI2ZmOTAwMDtcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbmFzaWRlIHAge1xcbiAgZm9udC1zaXplOiAxLjNyZW07XFxuICBmb250LXdlaWdodDogOTAwO1xcbn1cXG5cXG4ucHJvamVjdGxpc3QgbGkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ucHJvamVjdGxpc3QgbGkgcCB7XFxuICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5wcm9qZWN0bGlzdCBsaTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBlZGVkO1xcbn1cXG5cXG4ucHJvamVjdGxpc3QgbGkgYnV0dG9uIHtcXG4gIHBhZGRpbmc6IDA7XFxuICB3aWR0aDogYXV0bztcXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbiAgY29sb3I6IHJnYigxODEsIDE4NSwgMTgxKTtcXG59XFxuXFxuLypcXG50byBmaXggYm9sZCBmb250XFxudG8gQUREIHRyYW5zaXRpb24hXFxuKi9cXG5cXG4ubWFpbiB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xcbiAgcGFkZGluZzogMnJlbTtcXG59XFxuXFxuLm1haW4gbGkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubWFpbiBsaSBwOmZpcnN0LW9mLXR5cGUge1xcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxufVxcblxcbi5tYWluIGxpIGJ1dHRvbiB7XFxuICB3aWR0aDogYXV0bztcXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xcbn1cXG5cXG4ubWFpbiBsaSBidXR0b246bnRoLW9mLXR5cGUoMSkge1xcbiAgY29sb3I6IHJnYig4LCAxNDYsIDE1KTtcXG59XFxuXFxuLm1haW4gbGkgYnV0dG9uOm50aC1vZi10eXBlKDIpIHtcXG4gIGNvbG9yOiByZ2IoMTg2LCA2MywgNik7XFxufVxcblxcbi5tYWluIGxpOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxzQkFBc0I7RUFDdEIsU0FBUztFQUNULFVBQVU7RUFDVixxQ0FBcUM7RUFDckMsZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixhQUFhO0VBQ2IsZ0NBQWdDO0VBQ2hDLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztFQUNkLFlBQVk7RUFDWixhQUFhO0VBQ2IsYUFBYTtFQUNiLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGVBQWU7RUFDZixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIseUJBQXlCO0FBQzNCOztBQUVBOzs7Q0FHQzs7QUFFRDtFQUNFLHlCQUF5QjtFQUN6QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoXFxcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TW9udHNlcnJhdCZkaXNwbGF5PXN3YXBcXFwiKTtcXG5cXG4qIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJNb250c2VycmF0XFxcIiwgc2Fucy1zZXJpZjtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcXG59XFxuXFxubGkge1xcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xcbn1cXG5cXG5ib2R5IHtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAwcHggMWZyO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1cmVtIDFmcjtcXG59XFxuXFxuaGVhZGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjkwMDA7XFxuICBwYWRkaW5nOiAxcmVtO1xcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZm9udC1zaXplOiAycmVtO1xcbiAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG5hc2lkZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xcbiAgcGFkZGluZzogMnJlbTtcXG59XFxuXFxuYXNpZGUgbGkgc3BhbiB7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxufVxcblxcbmJ1dHRvbiB7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICBib3JkZXI6IG5vbmU7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgZm9udDogaW5oZXJpdDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG91dGxpbmU6IGluaGVyaXQ7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG5hc2lkZSBidXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZWRlZDtcXG59XFxuXFxuLnByb2plY3RzIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4ucHJvamVjdHMgYnV0dG9uIHtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG4gIHdpZHRoOiBhdXRvO1xcbn1cXG5cXG4ucHJvamVjdHMgYnV0dG9uOmhvdmVyIHtcXG4gIGNvbG9yOiAjZmY5MDAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuYXNpZGUgcCB7XFxuICBmb250LXNpemU6IDEuM3JlbTtcXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XFxufVxcblxcbi5wcm9qZWN0bGlzdCBsaSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5wcm9qZWN0bGlzdCBsaSBwIHtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLnByb2plY3RsaXN0IGxpOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGVkZWQ7XFxufVxcblxcbi5wcm9qZWN0bGlzdCBsaSBidXR0b24ge1xcbiAgcGFkZGluZzogMDtcXG4gIHdpZHRoOiBhdXRvO1xcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XFxuICBjb2xvcjogcmdiKDE4MSwgMTg1LCAxODEpO1xcbn1cXG5cXG4vKlxcbnRvIGZpeCBib2xkIGZvbnRcXG50byBBREQgdHJhbnNpdGlvbiFcXG4qL1xcblxcbi5tYWluIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XFxuICBwYWRkaW5nOiAycmVtO1xcbn1cXG5cXG4ubWFpbiBsaSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5tYWluIGxpIHA6Zmlyc3Qtb2YtdHlwZSB7XFxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XFxuICBtYXJnaW4tbGVmdDogMTBweDtcXG59XFxuXFxuLm1haW4gbGkgYnV0dG9uIHtcXG4gIHdpZHRoOiBhdXRvO1xcbiAgcGFkZGluZzogNXB4IDEwcHg7XFxufVxcblxcbi5tYWluIGxpIGJ1dHRvbjpudGgtb2YtdHlwZSgxKSB7XFxuICBjb2xvcjogcmdiKDgsIDE0NiwgMTUpO1xcbn1cXG5cXG4ubWFpbiBsaSBidXR0b246bnRoLW9mLXR5cGUoMikge1xcbiAgY29sb3I6IHJnYigxODYsIDYzLCA2KTtcXG59XFxuXFxuLm1haW4gbGk6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyB0b2RvQXBwLCBUb2RvSXRlbSB9IGZyb20gXCIuXCI7XG5cbmNvbnN0IHRvZG9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2Rvc1wiKTtcbmNvbnN0IHByb2plY3RzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9qZWN0bGlzdFwiKTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUh0bWxFbGVtZW50ID0gKFxuICB0YWcsXG4gIGh0bWxDbGFzcyxcbiAgdGV4dENvbnRlbnQsXG4gIHR5cGUsXG4gIGRhdGFJbmRleFxuKSA9PiB7XG4gIGNvbnN0IGh0bWxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICBpZiAoaHRtbENsYXNzKSB7XG4gICAgaHRtbEVsZW1lbnQuY2xhc3NMaXN0LmFkZChodG1sQ2xhc3MpO1xuICB9XG4gIGlmICh0ZXh0Q29udGVudCkge1xuICAgIGh0bWxFbGVtZW50LnRleHRDb250ZW50ID0gdGV4dENvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGUpIHtcbiAgICBodG1sRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIHR5cGUpO1xuICB9XG4gIGlmIChkYXRhSW5kZXgpIHtcbiAgICBodG1sRWxlbWVudC5kYXRhc2V0LmluZGV4ID0gZGF0YUluZGV4O1xuICB9XG4gIHJldHVybiBodG1sRWxlbWVudDtcbn07XG5cbmNvbnN0IHJlbmRlclRvZG8gPSAoaXRlbSwgaW5kZXgpID0+IHtcbiAgY29uc3QgaXRlbUxpbmUgPSBjcmVhdGVIdG1sRWxlbWVudChcImxpXCIsIG51bGwsIG51bGwpO1xuICBjb25zdCBjaGVjayA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiaW5wdXRcIiwgbnVsbCwgbnVsbCwgXCJjaGVja2JveFwiKTtcbiAgY29uc3QgZGVzY1AgPSBjcmVhdGVIdG1sRWxlbWVudChcInBcIiwgbnVsbCwgYCR7aXRlbS5kZXNjcmlwdGlvbn1gKTtcbiAgY29uc3QgZGF0ZVAgPSBjcmVhdGVIdG1sRWxlbWVudChcInBcIiwgbnVsbCwgYCR7aXRlbS5kdWVEYXRlfWApO1xuICBjb25zdCBlZGl0QnRuID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgXCJidXR0b25cIixcbiAgICBcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIixcbiAgICBcImVkaXRcIlxuICApO1xuICBjb25zdCBkZWxldGVCdG4gPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICBcImJ1dHRvblwiLFxuICAgIFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiLFxuICAgIFwiZGVsZXRlXCIsXG4gICAgbnVsbCxcbiAgICBgJHtpbmRleH1gXG4gICk7XG5cbiAgLy9jb25uZWN0IHdpdGggcHJvamVjdCFcbiAgZGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgLy9jb25zb2xlLmxvZyhcInRvZGVzXCIpO1xuICAgIC8vY29uc3QgdG9EZWxldGUgPSBlLnRhcmdldC5kYXRhc2V0LmluZGV4O1xuICAgIC8vdG9kb0FwcC5yZW1vdmVQcm9qZWN0KHRvRGVsZXRlKTtcbiAgfSk7XG4gIGl0ZW1MaW5lLmFwcGVuZENoaWxkKGNoZWNrKTtcbiAgaXRlbUxpbmUuYXBwZW5kQ2hpbGQoZGVzY1ApO1xuICBpdGVtTGluZS5hcHBlbmRDaGlsZChkYXRlUCk7XG4gIGl0ZW1MaW5lLmFwcGVuZENoaWxkKGVkaXRCdG4pO1xuICBpdGVtTGluZS5hcHBlbmRDaGlsZChkZWxldGVCdG4pO1xuICB0b2Rvcy5hcHBlbmRDaGlsZChpdGVtTGluZSk7XG59O1xuXG5jb25zdCByZW5kZXJBZGRUb2RvQnV0dG9uID0gKGluZGV4KSA9PiB7XG4gIGNvbnN0IGFkZFRvZG8gPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICBcImJ1dHRvblwiLFxuICAgIFwiYWRkdG9kb1wiLFxuICAgIFwiK0FkZCB0YXNrXCIsXG4gICAgbnVsbCxcbiAgICAvL2hlcmUgbnVsbCB0dXJuZWQgaW50byBhIHRlbXBsYXRlIHN0cmluZ1xuICAgIGAke2luZGV4fWBcbiAgKTtcbiAgYWRkVG9kby5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IGlucHV0VG9kbyhlKSk7XG4gIHRvZG9zLmFwcGVuZENoaWxkKGFkZFRvZG8pO1xufTtcblxuY29uc3QgaW5wdXRUb2RvID0gKGUpID0+IHtcbiAgdG9kb3MucmVtb3ZlQ2hpbGQodG9kb3MubGFzdENoaWxkKTtcbiAgY29uc3QgdG9kb0lucHV0Rm9ybSA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiZm9ybVwiLCBudWxsLCBudWxsKTtcbiAgY29uc3QgaW5wdXREZXNjcmlwdGlvbiA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiaW5wdXRcIiwgbnVsbCwgbnVsbCwgXCJ0ZXh0XCIpO1xuICBjb25zdCBpbnB1dER1ZWRhdGUgPSBjcmVhdGVIdG1sRWxlbWVudChcImlucHV0XCIsIG51bGwsIG51bGwsIFwidGV4dFwiKTtcbiAgY29uc3Qgc2VsZWN0ID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJzZWxlY3RcIiwgbnVsbCwgbnVsbCk7XG4gIGNvbnN0IHN1Ym1pdEJ0biA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiYnV0dG9uXCIsIG51bGwsIFwiQWRkXCIsIFwic3VibWl0XCIpO1xuXG4gIGlucHV0RGVzY3JpcHRpb24ucmVxdWlyZWQgPSB0cnVlO1xuICBpbnB1dERlc2NyaXB0aW9uLnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiVGFzayBkZXNjcmlwdGlvblwiKTtcbiAgc2VsZWN0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJwcm9qZWN0c1wiKTtcblxuICBjb25zb2xlLmxvZyhlLnRhcmdldC5kYXRhc2V0LmluZGV4KTtcblxuICAvL2Fic3RyYWN0IGF3YXkgdGhlc2UgZnVuY3Rpb25zXG4gIGlmIChlLnRhcmdldC5kYXRhc2V0LmluZGV4ID09IFwibnVsbFwiKSB7XG4gICAgdG9kb0FwcC5wcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgICBjb25zdCBwcm9qZWN0T3B0aW9uID0gY3JlYXRlSHRtbEVsZW1lbnQoXG4gICAgICAgIFwib3B0aW9uXCIsXG4gICAgICAgIG51bGwsXG4gICAgICAgIGAke3Byb2plY3QuZGVzY3JpcHRpb259YFxuICAgICAgKTtcbiAgICAgIHByb2plY3RPcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7cHJvamVjdC5kZXNjcmlwdGlvbn1gKTtcbiAgICAgIHNlbGVjdC5hcHBlbmRDaGlsZChwcm9qZWN0T3B0aW9uKTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZyhcIllZWUVQXCIpO1xuXG4gICAgLy9hYnN0cmFjdCBhd2F5XG4gICAgdG9kb0lucHV0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBjb25zb2xlLmxvZyh0b2RvQXBwKTtcbiAgICAgIGNvbnNvbGUubG9nKHNlbGVjdC52YWx1ZSk7XG4gICAgICBjb25zdCBjdXJyZW50UHJvamVjdEluZGV4ID0gdG9kb0FwcC5wcm9qZWN0cy5maW5kSW5kZXgoXG4gICAgICAgIChwcm9qZWN0KSA9PiBwcm9qZWN0LmRlc2NyaXB0aW9uID09PSBgJHtzZWxlY3QudmFsdWV9YFxuICAgICAgKTtcblxuICAgICAgY29uc29sZS5sb2coY3VycmVudFByb2plY3RJbmRleCk7XG4gICAgICBjb25zdCB0b2RvSXRlbSA9IG5ldyBUb2RvSXRlbShpbnB1dERlc2NyaXB0aW9uLnZhbHVlLCBpbnB1dER1ZWRhdGUudmFsdWUpO1xuICAgICAgdG9kb0FwcC5wcm9qZWN0c1tjdXJyZW50UHJvamVjdEluZGV4XS5hZGRUb2RvKHRvZG9JdGVtKTtcbiAgICAgIGNvbnNvbGUubG9nKHRvZG9BcHApO1xuICAgICAgcmVuZGVyUHJvamVjdFRvZG9zKGN1cnJlbnRQcm9qZWN0SW5kZXgpO1xuICAgIH0pO1xuXG4gICAgdG9kb0lucHV0Rm9ybS5hcHBlbmRDaGlsZChpbnB1dERlc2NyaXB0aW9uKTtcbiAgICB0b2RvSW5wdXRGb3JtLmFwcGVuZENoaWxkKGlucHV0RHVlZGF0ZSk7XG4gICAgdG9kb0lucHV0Rm9ybS5hcHBlbmRDaGlsZChzZWxlY3QpO1xuICAgIHRvZG9JbnB1dEZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0QnRuKTtcbiAgICB0b2Rvcy5hcHBlbmRDaGlsZCh0b2RvSW5wdXRGb3JtKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBjdXJyZW50UHJvamVjdEluZGV4ID0gZS50YXJnZXQuZGF0YXNldC5pbmRleDtcblxuICAgIHRvZG9JbnB1dEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgY29uc3QgdG9kb0l0ZW0gPSBuZXcgVG9kb0l0ZW0oaW5wdXREZXNjcmlwdGlvbi52YWx1ZSwgaW5wdXREdWVkYXRlLnZhbHVlKTtcbiAgICAgIHRvZG9BcHAucHJvamVjdHNbY3VycmVudFByb2plY3RJbmRleF0uYWRkVG9kbyh0b2RvSXRlbSk7XG4gICAgICBjb25zb2xlLmxvZyh0b2RvQXBwKTtcbiAgICAgIHJlbmRlclByb2plY3RUb2RvcyhjdXJyZW50UHJvamVjdEluZGV4KTtcbiAgICB9KTtcblxuICAgIHRvZG9JbnB1dEZvcm0uYXBwZW5kQ2hpbGQoaW5wdXREZXNjcmlwdGlvbik7XG4gICAgdG9kb0lucHV0Rm9ybS5hcHBlbmRDaGlsZChpbnB1dER1ZWRhdGUpO1xuICAgIHRvZG9JbnB1dEZvcm0uYXBwZW5kQ2hpbGQoc3VibWl0QnRuKTtcbiAgICB0b2Rvcy5hcHBlbmRDaGlsZCh0b2RvSW5wdXRGb3JtKTtcbiAgfVxufTtcblxuY29uc3QgY2xlYXJUb2RvcyA9ICgpID0+IHtcbiAgdG9kb3MuaW5uZXJIVE1MID0gXCJcIjtcbn07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJQcm9qZWN0cyA9ICgpID0+IHtcbiAgdG9kb0FwcC5wcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0LCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IHByb2plY3RMaW5lID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJsaVwiLCBudWxsLCBudWxsKTtcbiAgICBjb25zdCBpY29uID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJzcGFuXCIsIFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiLCBcImxpc3RcIik7XG4gICAgY29uc3QgcHJvamVjdE5hbWUgPSBjcmVhdGVIdG1sRWxlbWVudChcInBcIiwgbnVsbCwgYCR7cHJvamVjdC5kZXNjcmlwdGlvbn1gKTtcbiAgICBjb25zdCBkZWxldGVCdG4gPSBjcmVhdGVIdG1sRWxlbWVudChcbiAgICAgIFwiYnV0dG9uXCIsXG4gICAgICBcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIixcbiAgICAgIFwiZGVsZXRlXCIsXG4gICAgICBudWxsLFxuICAgICAgYCR7aW5kZXh9YFxuICAgICk7XG4gICAgcHJvamVjdExpbmUuYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgcHJvamVjdExpbmUuYXBwZW5kQ2hpbGQocHJvamVjdE5hbWUpO1xuICAgIHByb2plY3RMaW5lLmFwcGVuZENoaWxkKGRlbGV0ZUJ0bik7XG4gICAgcHJvamVjdExpbmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHJlbmRlclByb2plY3RUb2RvcyhpbmRleCk7XG4gICAgfSk7XG4gICAgZGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgcmVtb3ZlUHJvamVjdChlKTtcbiAgICAgIGNsZWFyVG9kb3MoKTtcbiAgICAgIHJlbmRlckluYm94KCk7XG4gICAgfSk7XG5cbiAgICBwcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0TGluZSk7XG4gIH0pO1xufTtcblxuY29uc3QgcmVuZGVyUHJvamVjdFRvZG9zID0gKGluZGV4KSA9PiB7XG4gIGNsZWFyVG9kb3MoKTtcbiAgdG9kb0FwcC5wcm9qZWN0c1tpbmRleF0udG9kb0xpc3QuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcbiAgICByZW5kZXJUb2RvKGl0ZW0sIGluZGV4KTtcbiAgfSk7XG4gIHJlbmRlckFkZFRvZG9CdXR0b24oaW5kZXgpO1xufTtcblxuY29uc3QgcmVtb3ZlUHJvamVjdCA9IChlKSA9PiB7XG4gIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIGNvbnNvbGUubG9nKFwieWVzXCIpO1xuICBjb25zdCB0b0RlbGV0ZSA9IGUudGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG4gIHRvZG9BcHAucmVtb3ZlUHJvamVjdCh0b0RlbGV0ZSk7XG4gIGNsZWFyUHJvamVjdHMoKTtcbiAgcmVuZGVyUHJvamVjdHMoKTtcbiAgY29uc29sZS5sb2codG9kb0FwcCk7XG4gIC8vZG8gaSBuZWVkIHRvIHJlbW92ZSB0b2RvcyBzZXBhcmF0ZWx5P1xufTtcblxuY29uc3QgY2xlYXJQcm9qZWN0cyA9ICgpID0+IHtcbiAgcHJvamVjdHMuaW5uZXJIVE1MID0gXCJcIjtcbn07XG5cbmV4cG9ydCBjb25zdCByZW5kZXJJbmJveCA9ICgpID0+IHtcbiAgdG9kb0FwcC5wcm9qZWN0cy5mb3JFYWNoKChwcm9qZWN0KSA9PiB7XG4gICAgcHJvamVjdC50b2RvTGlzdC5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgcmVuZGVyVG9kbyhpdGVtLCBpbmRleCk7XG4gICAgfSk7XG4gIH0pO1xuICByZW5kZXJBZGRUb2RvQnV0dG9uKG51bGwpO1xufTtcblxuY29uc3QgaW5ib3hCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2luYm94XCIpO1xuaW5ib3hCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY2xlYXJUb2RvcygpO1xuICByZW5kZXJJbmJveCgpO1xufSk7XG4iLCJpbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSBcImRhdGUtZm5zXCI7XG5pbXBvcnQgeyByZW5kZXJJbmJveCwgcmVuZGVyUHJvamVjdHMgfSBmcm9tIFwiLi9ET01cIjtcblxuLyogZGF0YSBzdHJ1Y3R1cmVzIFxudG9kb0FwcFxuKi9cblxuZXhwb3J0IGNsYXNzIFRvZG9JdGVtIHtcblxuICBjb25zdHJ1Y3RvcihkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJvamVjdCkge1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xuICAgIHRoaXMucHJvamVjdCA9IHByb2plY3Q7XG4gICAgdGhpcy5pc0NvbXBsZXRlID0gZmFsc2U7XG4gIH1cblxuICBlZGl0VG9kbyhuZXdEZXNjcmlwdGlvbiwgbmV3RHVlRGF0ZSkge1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBuZXdEZXNjcmlwdGlvbjtcbiAgICB0aGlzLmR1ZURhdGUgPSBuZXdEdWVEYXRlO1xuICB9XG5cbiAgY29tcGxldGVUb2RvKCkge1xuICAgIHRoaXMuaXNDb21wbGV0ZSA9IHRydWU7XG4gIH1cbn1cblxuLy9jb25uZWN0aW9uIGJldHdlZW4gcHJvamVjdCBhbmQgdG9kb2l0ZW0hIVxuXG5leHBvcnQgY2xhc3MgUHJvamVjdCB7XG4gIGNvbnN0cnVjdG9yKGRlc2NyaXB0aW9uKSB7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMudG9kb0xpc3QgPSBbXTtcbiAgfVxuXG4gIGVkaXRQcm9qZWN0KG5ld0Rlc2NyaXB0aW9uKSB7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IG5ld0Rlc2NyaXB0aW9uO1xuICB9XG5cbiAgYWRkVG9kbyh0b2RvSXRlbSkge1xuICAgIHRoaXMudG9kb0xpc3QucHVzaCh0b2RvSXRlbSk7XG4gIH1cblxuICByZW1vdmVUb2RvKGluZGV4KSB7XG4gICAgdGhpcy50b2RvTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCB0b2RvQXBwID0ge1xuICBwcm9qZWN0czogW10sXG5cbiAgYWRkUHJvamVjdChwcm9qZWN0KSB7XG4gICAgdGhpcy5wcm9qZWN0cy5wdXNoKHByb2plY3QpO1xuICB9LFxuXG4gIHJlbW92ZVByb2plY3QoaW5kZXgpIHtcbiAgICBjb25zb2xlLmxvZyhpbmRleCk7XG4gICAgdGhpcy5wcm9qZWN0cy5zcGxpY2UoaW5kZXgsIDEpO1xuICB9LFxufTtcblxuLy8gZGVtbyBwcm9qZWN0IGFuZCBpdGVtIGluIHRvZG9hcHBcblxuY29uc3QgZGVtb1Byb2plY3QgPSBuZXcgUHJvamVjdChcImRlbW9cIik7XG5jb25zdCBkZW1vUHJvamVjdDIgPSBuZXcgUHJvamVjdChcImRlbW8yXCIpO1xuXG5jb25zdCB0b0NsZWFuID0gbmV3IFRvZG9JdGVtKFwidG8gY2xlYW4gcm9vbVwiLCBcIjJwbVwiLCBcImRlbW9cIik7XG5jb25zdCB0b1J1biA9IG5ldyBUb2RvSXRlbShcInRvIHJ1blwiLCBcIjUuMDlcIik7XG5cbmRlbW9Qcm9qZWN0LmFkZFRvZG8odG9DbGVhbik7XG5kZW1vUHJvamVjdDIuYWRkVG9kbyh0b0NsZWFuKTtcbmRlbW9Qcm9qZWN0Mi5hZGRUb2RvKHRvUnVuKTtcblxudG9kb0FwcC5hZGRQcm9qZWN0KGRlbW9Qcm9qZWN0KTtcbnRvZG9BcHAuYWRkUHJvamVjdChkZW1vUHJvamVjdDIpO1xuXG5yZW5kZXJJbmJveCgpO1xucmVuZGVyUHJvamVjdHMoKTtcblxuLyogXG5UT0RPXG5cbklGIGluYm94L3RvZGF5L3dlZWsgLSBhZGR0YXNrIHdpdGggcHJvamVjdCB0byBjaG9vc2VcbklGIHByb2plY3QgLSBhZGR0YXNrIGZ1bmN0aW9uIHdpdGhvdXQgcHJvamVjdCB0byBjaG9vc2VcblxuMy4gY3JlYXRlIGZvcm1zIHRvIGlucHV0IHByb2plY3RzIGFuZCB0b2RvcywgYWRkIGxvZ2ljcyB0byBpdFxuMy4xIHNldCB0b2RvcyBhcyBjb21wbGV0ZVxuNC4gd29yayB3aXRoIGRhdGVzIGFuZCB0b2RheS93ZWVrIGJ1dHRvbnMgLSBmaWx0ZXIgYXJyYXkgdGljdGFjdG9lXG4rc29ydCBmb3IgbGlzdGluZyAodXJnZW50cyBvbiB0aGUgdG9wKVxuNC4xLiBubyBwcm9qZWN0cyB3aXRoIHRoZSBzYW1lIG5hbWUgLSBlcnJvclxuXG41LiBjb21wbGV0ZWQgdGFza3MgbG9naWNzP1xuNi4gY3NzOiBidXJnZXIgZm9yIG1vYmlsZSwgbWF5YmUgdHJhbnNpdGlvbj9cbjcuIGFkZCBsb2NhbHN0b3JhZ2Vcblxue3RvZG9BcHB9XG4tIFtwcm9qZWN0c11cbi0gdG9BZGQgcHJvamVjdFxuLSB0b1JlbW92ZSBwcm9qZWN0XG4hIC0gc2hvdyBpbmJveCwgdG9kYXksIG5leHQgNyBkYXlzIGFuZCBjb21wbGV0ZWRcblxue3Byb2plY3R9XG4tIHRpdGxlXG4tIGRhdGEta2V5ID09PSBhcnJheSBpbmRleCBmb3IgZG9tIHJlbW92ZS9lZGl0XG4tIFt0b2RvIGl0ZW1zXVxuLSB0b0VkaXQgcHJvamVjdFxuLSB0b0FkZCB0b2RvXG4tIHRvUmVtb3ZlIHRvZG9cblxue3RvZG8gaXRlbX06XG4tIGRlc2Ncbi0gZHVlRGF0ZVxuLSBpc0NvbXBsZXRlXG4tIGRhdGEta2V5IGZvciBkb20gcmVtb3ZlL2VkaXRcbi0gdG9FZGl0IChpbmNsIGlzQ29tcGxldGUpIEFORCBhYmlsaXR5IHRvIGNoYW5nZSBwcm9qZWN0cyBmcm9tIHRoZSBsaXN0XG5cbnJlZiBodHRwczovL2FydGlzLWRldi5naXRodWIuaW8vdG8tZG8tbGlzdC8jXG5cbiAqL1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsInRvZG9zIiwicHJvamVjdHMiLCJjcmVhdGVIdG1sRWxlbWVudCIsInRhZyIsImh0bWxDbGFzcyIsInRleHRDb250ZW50IiwidHlwZSIsImRhdGFJbmRleCIsImh0bWxFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiZGF0YXNldCIsInJlbmRlclRvZG8iLCJpdGVtTGluZSIsImNoZWNrIiwiZGVzY1AiLCJkZXNjcmlwdGlvbiIsImRhdGVQIiwiZHVlRGF0ZSIsImVkaXRCdG4iLCJkZWxldGVCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwic3RvcFByb3BhZ2F0aW9uIiwicmVuZGVyQWRkVG9kb0J1dHRvbiIsImFkZFRvZG8iLCJpbnB1dFRvZG8iLCJsYXN0Q2hpbGQiLCJ0b2RvSW5wdXRGb3JtIiwiaW5wdXREZXNjcmlwdGlvbiIsImlucHV0RHVlZGF0ZSIsInNlbGVjdCIsInN1Ym1pdEJ0biIsInJlcXVpcmVkIiwiY29uc29sZSIsImxvZyIsInRvZG9BcHAiLCJmb3JFYWNoIiwicHJvamVjdCIsInByb2plY3RPcHRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwiY3VycmVudFByb2plY3RJbmRleCIsImZpbmRJbmRleCIsInRvZG9JdGVtIiwiVG9kb0l0ZW0iLCJyZW5kZXJQcm9qZWN0VG9kb3MiLCJjbGVhclRvZG9zIiwiaW5uZXJIVE1MIiwicmVuZGVyUHJvamVjdHMiLCJwcm9qZWN0TGluZSIsImljb24iLCJwcm9qZWN0TmFtZSIsInJlbW92ZVByb2plY3QiLCJyZW5kZXJJbmJveCIsInRvZG9MaXN0IiwidG9EZWxldGUiLCJjbGVhclByb2plY3RzIiwiY29uc3RydWN0b3IiLCJpc0NvbXBsZXRlIiwiZWRpdFRvZG8iLCJuZXdEZXNjcmlwdGlvbiIsIm5ld0R1ZURhdGUiLCJjb21wbGV0ZVRvZG8iLCJQcm9qZWN0IiwiZWRpdFByb2plY3QiLCJyZW1vdmVUb2RvIiwiYWRkUHJvamVjdCIsImRlbW9Qcm9qZWN0IiwiZGVtb1Byb2plY3QyIiwidG9DbGVhbiIsInRvUnVuIl0sInNvdXJjZVJvb3QiOiIifQ==