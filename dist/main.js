(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat&display=swap);"]),a.push([n.id,':root {\n  --light-grey-color: #fafafa;\n  --dark-grey-color: rgb(181, 185, 181);\n  --orange-color: #ff9000;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\n.toggle-sidebar {\n  font-size: 2.5rem;\n  margin-right: 10px;\n  cursor: pointer;\n  display: none;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projects-div {\n  margin: 10px 0px;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.active {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: var(--dark-grey-color);\n}\n\naside form input[type="text"] {\n  width: 100%;\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.orange {\n  color: orange;\n}\n\naside li.add:hover {\n  background-color: var(--light-grey-color);\n  color: var(--orange-color);\n}\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main h4 {\n  font-size: 1.3rem;\n  margin-bottom: 10px;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n\n.check {\n  text-decoration: line-through;\n}\n\n.main li.add:hover {\n  background-color: #ffffff;\n  color: var(--orange-color);\n}\n\n.main form {\n  width: 100%;\n}\n\n.main form #input {\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.main form input[type="text"] {\n  width: 100%;\n  border: none;\n  padding: 10px 0px;\n}\n\n.main form input[type="date"],\n.main form input[type="select"] {\n  border: 1px solid var(--dark-grey-color);\n}\n\ninput:focus {\n  outline: none;\n}\n\n.main form .input-buttons,\naside form .input-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n.main form button,\naside form button {\n  text-align: center;\n  width: auto;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n}\n\n.main form button:first-of-type,\naside form button:first-of-type {\n  color: white;\n  background-color: var(--orange-color);\n}\n\n.main form button:last-of-type,\naside form button:last-of-type {\n  background-color: var(--light-grey-color);\n}\n\n.aside-hide {\n  display: none;\n}\n\n@media (max-width: 960px) {\n  .toggle-sidebar {\n    display: block !important;\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n  }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,2BAA2B;EAC3B,qCAAqC;EACrC,uBAAuB;AACzB;;AAEA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,qCAAqC;EACrC,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,gCAAgC;EAChC,4BAA4B;AAC9B;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,aAAa;AACf;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,YAAY;EACZ,aAAa;EACb,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,6BAA6B;AAC/B;;AAEA;EACE,WAAW;EACX,wCAAwC;EACxC,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,yCAAyC;EACzC,0BAA0B;AAC5B;;AAEA;EACE,yBAAyB;EACzB,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,yBAAyB;EACzB,0BAA0B;AAC5B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,wCAAwC;EACxC,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;AACnB;;AAEA;;EAEE,wCAAwC;AAC1C;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,aAAa;EACb,SAAS;AACX;;AAEA;;EAEE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;;EAEE,YAAY;EACZ,qCAAqC;AACvC;;AAEA;;EAEE,yCAAyC;AAC3C;;AAEA;EACE,aAAa;AACf;;AAEA;EACE;IACE,yBAAyB;EAC3B;;EAEA;IACE,aAAa;IACb,sBAAsB;EACxB;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Montserrat&display=swap");\n\n:root {\n  --light-grey-color: #fafafa;\n  --dark-grey-color: rgb(181, 185, 181);\n  --orange-color: #ff9000;\n}\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: "Montserrat", sans-serif;\n  font-size: 18px;\n  font-size: inherit;\n}\n\nli {\n  list-style-type: none;\n}\n\nbody {\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 300px 1fr;\n  grid-template-rows: 5rem 1fr;\n}\n\nheader {\n  background-color: #ff9000;\n  padding: 1rem;\n  grid-column: span 2;\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  color: white;\n}\n\n.toggle-sidebar {\n  font-size: 2.5rem;\n  margin-right: 10px;\n  cursor: pointer;\n  display: none;\n}\n\naside {\n  background-color: #fafafa;\n  padding: 2rem;\n}\n\naside li span {\n  margin-right: 10px;\n}\n\nbutton {\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 10px;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\naside button:hover {\n  background-color: #f0eded;\n}\n\naside p {\n  font-size: 1.3rem;\n  font-weight: 900;\n}\n\n.projects-div {\n  margin: 10px 0px;\n}\n\n.projectlist li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.projectlist li p {\n  font-size: 1rem;\n}\n\n.projectlist li:hover {\n  background-color: #f0eded;\n}\n\n.active {\n  background-color: #f0eded;\n}\n\n.projectlist li button {\n  padding: 0;\n  width: auto;\n  margin-left: auto;\n  color: var(--dark-grey-color);\n}\n\naside form input[type="text"] {\n  width: 100%;\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.orange {\n  color: orange;\n}\n\naside li.add:hover {\n  background-color: var(--light-grey-color);\n  color: var(--orange-color);\n}\n\n.main {\n  background-color: #ffffff;\n  padding: 2rem;\n}\n\n.main h4 {\n  font-size: 1.3rem;\n  margin-bottom: 10px;\n}\n\n.main li {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.main li p:first-of-type {\n  margin-right: auto;\n  margin-left: 10px;\n}\n\n.main li button {\n  width: auto;\n  padding: 5px 10px;\n}\n\n.main li button:nth-of-type(1) {\n  color: rgb(8, 146, 15);\n}\n\n.main li button:nth-of-type(2) {\n  color: rgb(186, 63, 6);\n}\n\n.main li:hover {\n  background-color: #fafafa;\n}\n\n.check {\n  text-decoration: line-through;\n}\n\n.main li.add:hover {\n  background-color: #ffffff;\n  color: var(--orange-color);\n}\n\n.main form {\n  width: 100%;\n}\n\n.main form #input {\n  border: 1px solid var(--dark-grey-color);\n  border-radius: 5px;\n  padding: 5px;\n}\n\n.main form input[type="text"] {\n  width: 100%;\n  border: none;\n  padding: 10px 0px;\n}\n\n.main form input[type="date"],\n.main form input[type="select"] {\n  border: 1px solid var(--dark-grey-color);\n}\n\ninput:focus {\n  outline: none;\n}\n\n.main form .input-buttons,\naside form .input-buttons {\n  display: flex;\n  gap: 20px;\n}\n\n.main form button,\naside form button {\n  text-align: center;\n  width: auto;\n  padding: 5px 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n}\n\n.main form button:first-of-type,\naside form button:first-of-type {\n  color: white;\n  background-color: var(--orange-color);\n}\n\n.main form button:last-of-type,\naside form button:last-of-type {\n  background-color: var(--light-grey-color);\n}\n\n.aside-hide {\n  display: none;\n}\n\n@media (max-width: 960px) {\n  .toggle-sidebar {\n    display: block !important;\n  }\n\n  body {\n    display: flex;\n    flex-direction: column;\n  }\n}\n'],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],d=0;d<n.length;d++){var c=n[d],A=o.base?c[0]+o.base:c[0],s=i[A]||0,l="".concat(A," ").concat(s);i[A]=s+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var c=o(n,r),A=0;A<i.length;A++){var s=t(i[A]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{IK:()=>R,PK:()=>Z,mK:()=>X});var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),d=t.n(a),c=t(565),A=t.n(c),s=t(216),l=t.n(s),p=t(589),u=t.n(p),m=t(426),f={};f.styleTagTransform=u(),f.setAttributes=A(),f.insert=d().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),e()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;class g{static saveTodoApp(){localStorage.setItem("todoApp",JSON.stringify(X))}static getTodoApp(){const n=Object.assign(Object.create(X),JSON.parse(localStorage.getItem("todoApp")));return n.setProjects(n.getProjects().map((n=>Object.assign(new R,n)))),n.getProjects().forEach((n=>n.setTodos(n.getTodos().map((n=>Object.assign(new Z,n)))))),n}static addProject(n){X.addProject(n),g.saveTodoApp()}static removeProject(n){X.removeProject(n),g.saveTodoApp()}static addTodo(n,e){X.projects[n].addTodo(e),g.saveTodoApp()}static removeTodo(n,e){X.projects[n].removeTodo(e),g.saveTodoApp()}static editTodo(n,e,t,o){X.projects[n].todoList[e].editTodo(t,o),g.saveTodoApp()}}const E=document.querySelector(".todos"),C=document.querySelector(".projectlist"),y=document.querySelector("aside"),h=document.querySelector(".toggle-sidebar"),v=document.querySelector(".nav"),b=v.querySelectorAll("button"),B=document.querySelector("[data-index='inbox']"),x=document.querySelector("#add-button-template"),k=document.querySelector("#project-template"),j=document.querySelector("#todo-template"),S=document.querySelector("#add-project-template"),w=document.querySelector("#add-todo-template");let L;const q=(n,e,t)=>{const o=document.importNode(j.content,!0),r=o.querySelector("li"),i=o.querySelector("input"),a=o.querySelector("p:first-of-type"),d=o.querySelector("p:last-of-type"),c=o.querySelector("button:first-of-type"),A=o.querySelector("button:last-of-type");a.textContent="".concat(n.description),d.textContent="".concat(n.dueDate),c.dataset.todoIndex="".concat(e),A.dataset.todoIndex="".concat(e),!0===n.isComplete&&(i.checked=!0,a.classList.add("check"),d.classList.add("check")),i.addEventListener("change",(()=>{i.checked?(a.classList.add("check"),d.classList.add("check"),n.isComplete=!0):(a.classList.remove("check"),d.classList.remove("check"),n.isComplete=!1)})),c.dataset.projectIndex=t,c.addEventListener("click",(n=>{n.stopPropagation(),I(t,e)})),A.dataset.projectIndex=t,A.addEventListener("click",(n=>{n.stopPropagation(),T(t,e)})),E.appendChild(r)},T=(n,e)=>{g.removeTodo(n,e),z(),D(n)},P=n=>{const e=document.importNode(x.content,!0),t=e.querySelector("li");e.querySelector("p").textContent="Add task",t.addEventListener("click",(()=>I(n))),E.appendChild(t)},I=(n,e)=>{E.removeChild(E.lastChild);const t=document.importNode(w.content,!0),o=t.querySelector("form"),r=t.querySelector("input[type=text]"),i=t.querySelector("input[type=date]"),a=t.querySelector("select"),d=t.querySelector("button[type=submit]");if(t.querySelector("button[type=reset]").addEventListener("click",(()=>{E.removeChild(E.lastChild),P(n)})),e||0===e){const t=X.projects[n].todoList[e];return r.value=t.description,i.value=t.dueDate,o.addEventListener("submit",(t=>{t.preventDefault(),g.editTodo(n,e,r.value,i.value),D(n)})),a.style.display="none",d.textContent="Edit",void E.appendChild(o)}null===n?(X.projects.forEach((n=>{const e=document.createElement("option");e.textContent="".concat(n.description),e.value="".concat(n.description),a.appendChild(e)})),o.addEventListener("submit",(e=>{e.preventDefault(),n=X.projects.findIndex((n=>n.description==="".concat(a.value)));const t=new Z(r.value,i.value);g.addTodo(n,t),D(n)})),E.appendChild(o)):(o.addEventListener("submit",(e=>{e.preventDefault();const t=new Z(r.value,i.value);g.addTodo(n,t),D(n)})),a.style.display="none",E.appendChild(o))},z=()=>{E.innerHTML=""};v.addEventListener("click",(n=>{b.forEach((n=>n.classList.remove("active"))),"inbox"===n.target.dataset.index?document.querySelector("#inbox").classList.add("active"):"today"===n.target.dataset.index?document.querySelector("#today").classList.add("active"):"week"===n.target.dataset.index?document.querySelector("#week").classList.add("active"):"complete"===n.target.dataset.index&&document.querySelector("#complete").classList.add("active"),L=null,O(),M()})),C.addEventListener("click",(n=>{b.forEach((n=>n.classList.remove("active"))),n.target.dataset.index?(L=n.target.dataset.index,O(),M()):n.target.closest("[data-index]")&&(L=n.target.parentElement.getAttribute("data-index"),O(),M())}));const M=()=>{g.getTodoApp().getProjects().forEach(((n,e)=>{const t=document.importNode(k.content,!0),o=t.querySelector("li"),r=t.querySelector("p"),i=t.querySelector("button");o.dataset.index=e,i.dataset.projectIndex=e,r.textContent="".concat(n.description),e==L&&o.classList.add("active"),o.addEventListener("click",(()=>{D(e)})),i.addEventListener("click",(n=>{N(n)})),C.appendChild(o)})),W()},W=()=>{const n=document.importNode(x.content,!0),e=n.querySelector("li");n.querySelector("p").textContent="Add project",e.addEventListener("click",(()=>(()=>{C.removeChild(C.lastChild);const n=document.importNode(S.content,!0),e=n.querySelector("form"),t=n.querySelector("input"),o=n.querySelector('button[type="reset"]');C.appendChild(e),e.addEventListener("submit",(n=>{if(n.preventDefault(),g.getTodoApp().contains(t.value))return t.value="",void alert("Project names must be different");const e=new R(t.value);g.addProject(e);const o=g.getTodoApp().getIndex(t.value);O(),M(),D(o)})),o.addEventListener("click",(()=>{C.removeChild(C.lastChild),W()}))})())),C.appendChild(e)},D=n=>{z();const e=g.getTodoApp().getProjects()[n].getDescription();Y(e),g.getTodoApp().getProjects()[n].getTodos().forEach(((e,t)=>{q(e,t,n)})),P(n)},N=n=>{n.stopPropagation();const e=n.target.dataset.projectIndex;g.removeProject(e),O(),M(),z(),U()},O=()=>{C.innerHTML=""},Y=n=>{const e=document.createElement("h4");e.textContent=n,E.appendChild(e)},U=()=>{Y("Inbox"),X.projects.forEach(((n,e)=>{n.todoList.forEach(((n,t)=>{q(n,t,e)}))})),0!=g.getTodoApp().getProjects().length?P(null):(()=>{const n=document.createElement("p");n.textContent="Please create your first project",E.appendChild(n)})()};B.addEventListener("click",(()=>{z(),U()})),h.addEventListener("click",(()=>{y.classList.toggle("aside-hide")})),window.addEventListener("resize",(()=>{window.innerWidth<=960&&y.classList.remove("aside-hide")}));class Z{constructor(n,e){this.description=n,this.dueDate=e,this.isComplete=!1}editTodo(n,e){this.description=n,this.dueDate=e}completeTodo(){this.isComplete=!1}}class R{constructor(n){this.description=n,this.todoList=[]}getDescription(){return this.description}editProject(n){this.description=n}setTodos(n){this.todoList=n}getTodos(){return this.todoList}addTodo(n){this.todoList.push(n)}removeTodo(n){this.todoList.splice(n,1)}}let X={projects:[],setProjects(n){this.projects=n},getProjects(){return this.projects},contains(n){return this.projects.some((e=>e.getDescription()===n))},getIndex(n){return this.projects.findIndex((e=>e.getDescription()===n))},addProject(n){this.projects.push(n)},removeProject(n){this.projects.splice(n,1)}};X=g.getTodoApp()||Object.create(X),U(),M()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,